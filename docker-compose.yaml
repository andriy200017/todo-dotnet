version: '3.9'

services:
  web:
    container_name: todo_api
    build:
      context: ./Todo/
    restart: always
    depends_on:
      - db
    environment:
      DBHOST: db
      ASPNETCORE_ENVIRONMENT: Development
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todo_api.rule=Host(`api.${HOST}`)"
      - "traefik.http.routers.todo_api.tls=true"
      - "traefik.http.routers.todo_api.entrypoints=http,https"
    expose:
      - "80"
      - "443"
    networks:
      - proxy
      - default

  db:
    container_name: todo_db
    image: mysql:8.0.29
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - .docker/db/data:/var/lib/mysql
      - .docker/db/init:/docker-entrypoint-initdb.d
    expose:
      - "3306"
    networks:
      - default

  adminer:
    container_name: todo_adminer
    image: adminer:4.8.0
    restart: always
    depends_on:
      - db
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todo_adminer.rule=Host(`db.${HOST}`)"
      - "traefik.http.routers.todo_adminer.tls=true"
      - "traefik.http.routers.todo_adminer.entrypoints=http,https"
      - "traefik.http.services.todo_adminer.loadbalancer.server.port=8080" 
    networks:
      - proxy
      - default

  proxy:
    container_name: todo_proxy
    image: traefik:v2.6
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - .docker/proxy/static.yml:/etc/traefik/traefik.yml:ro
      - .docker/proxy/dynamic.yml:/etc/traefik/dynamic.yml:ro
      - ./certs:/etc/certs:ro
    networks:
      - proxy

networks:
  proxy:
    name: proxy